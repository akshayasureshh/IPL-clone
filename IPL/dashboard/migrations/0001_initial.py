# Generated by Django 5.0.2 on 2024-03-01 13:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bowler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matchID', models.CharField(default=0, max_length=300)),
                ('teamid', models.CharField(max_length=300, null=True)),
                ('name', models.CharField(max_length=255)),
                ('overs', models.FloatField(default=0)),
                ('maidens', models.IntegerField(default=0)),
                ('runs', models.IntegerField(default=0)),
                ('balls', models.IntegerField(default=0)),
                ('wickets', models.IntegerField(default=0)),
                ('no_balls', models.IntegerField(default=0)),
                ('fours', models.IntegerField(default=0)),
                ('sixes', models.IntegerField(default=0)),
                ('economy', models.FloatField(default=0)),
            ],
            options={
                'db_table': 'liveBowler',
            },
        ),
        migrations.CreateModel(
            name='CarouselItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('text', models.TextField()),
                ('image', models.ImageField(upload_to='carousel_images/')),
            ],
            options={
                'db_table': 'CarouselItem',
            },
        ),
        migrations.CreateModel(
            name='ClosedBowlerScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matchID', models.CharField(default=0, max_length=300)),
                ('teamid', models.CharField(max_length=300, null=True)),
                ('bowler_name', models.CharField(max_length=255)),
                ('closed_overs', models.FloatField(default=0)),
                ('closed_maidens', models.IntegerField(default=0)),
                ('closed_runs', models.IntegerField(default=0)),
                ('closed_balls', models.IntegerField(default=0)),
                ('closed_wickets', models.IntegerField(default=0)),
                ('closed_no_balls', models.IntegerField(default=0)),
                ('closed_fours', models.IntegerField(default=0)),
                ('closed_sixes', models.IntegerField(default=0)),
                ('closed_economy', models.FloatField(default=0)),
            ],
            options={
                'db_table': 'ClosedBowlerScore',
            },
        ),
        migrations.CreateModel(
            name='ClosedScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matchID', models.CharField(default=0, max_length=300)),
                ('teamid', models.CharField(max_length=300, null=True)),
                ('batsman_name', models.CharField(max_length=255)),
                ('runs', models.IntegerField(default=0)),
                ('balls', models.IntegerField(default=0)),
                ('ones', models.IntegerField(default=0)),
                ('twos', models.IntegerField(default=0)),
                ('threes', models.IntegerField(default=0)),
                ('fours', models.IntegerField(default=0)),
                ('sixes', models.IntegerField(default=0)),
                ('wides', models.IntegerField(default=0)),
                ('leg_byes', models.IntegerField(default=0)),
                ('no_balls', models.IntegerField(default=0)),
                ('dead_ball', models.IntegerField(default=0)),
                ('out_mode', models.CharField(max_length=400, null=True)),
                ('out_took_player', models.CharField(max_length=400, null=True)),
                ('strike_rate', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'ClosedScore',
            },
        ),
        migrations.CreateModel(
            name='LiveBattingScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batsman_name', models.CharField(max_length=255)),
                ('runs', models.IntegerField(default=0)),
                ('balls', models.IntegerField(default=0)),
                ('ones', models.IntegerField(default=0)),
                ('twos', models.IntegerField(default=0)),
                ('threes', models.IntegerField(default=0)),
                ('fours', models.IntegerField(default=0)),
                ('sixes', models.IntegerField(default=0)),
                ('wides', models.IntegerField(default=0)),
                ('leg_byes', models.IntegerField(default=0)),
                ('dead_ball', models.IntegerField(default=0)),
                ('strike_rate', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'liveBatting',
            },
        ),
        migrations.CreateModel(
            name='LiveScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matchID', models.CharField(default=0, max_length=300)),
                ('teamid', models.CharField(max_length=300, null=True)),
                ('batsman_name', models.CharField(max_length=255)),
                ('runs', models.IntegerField(default=0)),
                ('balls', models.IntegerField(default=0)),
                ('ones', models.IntegerField(default=0)),
                ('twos', models.IntegerField(default=0)),
                ('threes', models.IntegerField(default=0)),
                ('fours', models.IntegerField(default=0)),
                ('sixes', models.IntegerField(default=0)),
                ('wides', models.IntegerField(default=0)),
                ('leg_byes', models.IntegerField(default=0)),
                ('no_balls', models.IntegerField(default=0)),
                ('dead_ball', models.IntegerField(default=0)),
                ('out_mode', models.CharField(max_length=400, null=True)),
                ('out_took_player', models.CharField(max_length=400, null=True)),
                ('strike_rate', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'LiveScore',
            },
        ),
        migrations.CreateModel(
            name='OutMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matchID', models.CharField(default=0, max_length=300)),
                ('teamid', models.CharField(max_length=300, null=True)),
                ('name', models.CharField(max_length=300, null=True)),
                ('out_mode', models.CharField(max_length=400)),
                ('out_took_player', models.CharField(max_length=400, null=True)),
                ('selected_batsman', models.CharField(max_length=300, null=True)),
            ],
            options={
                'db_table': 'OutMode',
            },
        ),
        migrations.CreateModel(
            name='Season',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'SEASON',
            },
        ),
        migrations.CreateModel(
            name='sponsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sponser_logo', models.ImageField(default='images/batsmen.jpg', upload_to='sponser_logos/')),
                ('sponser_name', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Sponsers',
            },
        ),
        migrations.CreateModel(
            name='Team_login',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ownerEmail', models.EmailField(max_length=255)),
                ('ownerPassword', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='TeamDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Team_name', models.CharField(max_length=100, null=True)),
                ('Team_logo', models.ImageField(default='images/team.jpg', null=True, upload_to='images/')),
                ('Team_owner', models.CharField(max_length=100, null=True)),
                ('Team_address', models.CharField(max_length=255, null=True)),
                ('Team_email', models.EmailField(max_length=100, null=True)),
                ('Team_phone_number', models.CharField(max_length=10, null=True)),
            ],
            options={
                'db_table': 'Teams',
            },
        ),
        migrations.CreateModel(
            name='PlayersDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Player_name', models.CharField(max_length=100)),
                ('Player_logo', models.ImageField(default='images/batsmen.jpg', upload_to='images/')),
                ('Player_category', models.CharField(choices=[('', 'Select category'), ('Batsman', 'Batsman'), ('Bowler', 'Bowler'), ('All rounder', 'All rounder'), ('Wicket', 'Wicket keeper,Batsman')], max_length=100)),
                ('Player_location', models.CharField(max_length=255)),
                ('Player_address', models.CharField(max_length=255)),
                ('Player_email', models.EmailField(max_length=100)),
                ('Player_phone_number', models.CharField(max_length=10)),
                ('Player_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.teamdetails')),
            ],
            options={
                'db_table': 'Players_details',
            },
        ),
        migrations.CreateModel(
            name='UpcomingTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Match_date', models.DateTimeField()),
                ('Match_type', models.CharField(max_length=100, null=True)),
                ('Match_toss', models.CharField(max_length=100, null=True)),
                ('Match_status', models.CharField(max_length=100, null=True)),
                ('Ground_name', models.CharField(max_length=100, null=True)),
                ('Match_season', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.season')),
                ('TeamA', models.ForeignKey(max_length=100, on_delete=django.db.models.deletion.CASCADE, related_name='team1', to='dashboard.teamdetails')),
                ('TeamA_players', models.ManyToManyField(max_length=100, related_name='Team1_palyers', to='dashboard.playersdetails')),
                ('TeamB', models.ForeignKey(max_length=100, on_delete=django.db.models.deletion.CASCADE, related_name='team2', to='dashboard.teamdetails')),
                ('TeamB_playeres', models.ManyToManyField(max_length=100, related_name='Team2_name', to='dashboard.playersdetails')),
            ],
            options={
                'db_table': 'Tournament',
            },
        ),
        migrations.CreateModel(
            name='LiveMatchView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Ground_name', models.ForeignKey(max_length=100, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ground', to='dashboard.upcomingteam')),
                ('Match_date', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='date', to='dashboard.upcomingteam')),
                ('Match_season', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='season', to='dashboard.upcomingteam')),
                ('Match_status', models.ForeignKey(db_column='Status', max_length=100, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='live_status', to='dashboard.upcomingteam')),
                ('Match_toss', models.ForeignKey(max_length=100, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='toss', to='dashboard.upcomingteam')),
                ('Match_type', models.ForeignKey(max_length=100, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='type', to='dashboard.upcomingteam')),
                ('TeamA', models.ForeignKey(max_length=100, on_delete=django.db.models.deletion.CASCADE, related_name='teamA', to='dashboard.upcomingteam')),
                ('TeamB', models.ForeignKey(max_length=100, on_delete=django.db.models.deletion.CASCADE, related_name='teamB', to='dashboard.upcomingteam')),
                ('matchid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matchid', to='dashboard.upcomingteam')),
            ],
            options={
                'db_table': 'live',
            },
        ),
        migrations.CreateModel(
            name='CompletedMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lose_team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='loseteam', to='dashboard.teamdetails')),
                ('won_team', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wonteam', to='dashboard.teamdetails')),
                ('ground', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='completed_ground', to='dashboard.upcomingteam')),
                ('match_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='completed', to='dashboard.upcomingteam')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='completed_season', to='dashboard.upcomingteam')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='completed_status', to='dashboard.upcomingteam')),
                ('team1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='completed_team1', to='dashboard.upcomingteam')),
                ('team2', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='completed_team2', to='dashboard.upcomingteam')),
                ('toss', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='completed_toss', to='dashboard.upcomingteam')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='completed_type', to='dashboard.upcomingteam')),
            ],
            options={
                'db_table': 'CompletedMatch',
            },
        ),
    ]
